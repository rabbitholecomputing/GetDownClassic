// ===========================================================================//	CBasicApp.h					©1994-1999 Metrowerks Inc. All rights reserved.// ===========================================================================#ifndef _H_CBasicApp#define _H_CBasicApp#pragma once#include <LActiveScroller.h>#include <LApplication.h>#include <LCaption.h>#include <LGroupBox.h>#include <LGrowZone.h>#include <LStdControl.h>#include <LWindow.h>#include <PP_Messages.h>#include <PP_Resources.h>#include <UDrawingState.h>#include <UMemoryMgr.h>#include <URegistrar.h>#include <UThread.h>#include <stdio.h>#include "CBatchDownloadDialog.h"#include "CBinHex.h"#include "CDownloadClient.h"#include "Constants.h"#include "CPreferencesDialog.h"#include "CProgressBar.h"#include "CUrlHelper.h"#include "CUrlPresetTable.h"class CBasicApp : public LApplication, public LListener {public:							CBasicApp();	virtual					~CBasicApp();	virtual Boolean			ObeyCommand(								CommandT			inCommand,								void*				ioParam = nil);		virtual void			FindCommandStatus(								CommandT			inCommand,								Boolean&			outEnabled,								Boolean&			outUsesMark,								UInt16&				outMark,								Str255				outName);	virtual void			ListenToMessage(								MessageT			inMessage,								void				*ioParam							);	virtual Boolean	HandleKeyPress(const EventRecord& inKeyEvent);										LWindow *		GetWindow() { return theWindow; }			bool			IsBatchDownloading() { return batchDownloadDialog.IsBatchDownloading(); }			bool			LastDownloadWasSuccessful() { return bLastDownloadSuccess; }						FSSpec *		GetBatchDestination() { return batchDownloadDialog.GetDestination(); }			bool			GetBatchOverwriteLocal() { return batchDownloadDialog.IsOverwriteLocal(); }protected:	virtual void			StartUp();				void			RegisterClasses();						LWindow* 				theWindow;			CPreferencesDialog		prefsDialog;			CBatchDownloadDialog 	batchDownloadDialog;			private:			bool			bLastDownloadSuccess;			OSErr			iLastDownloadError;						bool			downloadLockout;						void			InitiateDownload();			void			CancelDownload();			void 			UpdateDownloadButtons();};#endif // _H_CBasicApp