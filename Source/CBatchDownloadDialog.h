#ifndef CBATCHDOWNLOADDIALOG_H#define CBATCHDOWNLOADDIALOG_H#include <LBroadcaster.h>#include <LString.h>#include <LDialogBox.h>#include <LThread.h>#include <LFileStream.h>#include <LEditField.h>#include <UModalDialogs.h>#include <UStandardFile.h>#include "Constants.h"#include "CBatchDownloadUrlTable.h"#include "CUrlImportDialogHandler.h"#include "CDownloadClient.h"#include "CPreferencesDialog.h"#include <string.h>#define btn_Local	3#define btn_Remote	7class CBasicApp;class CBatchDownloadDialog : public LCommander, public LBroadcaster{	private:	StDialogHandler 		*batchDialog;	CUrlImportDialogHandler *batchImportRemoteDialog;	protected:	CDownloadClient mDownloadClient;	BatchURL		batchUrls[kMaxBatchUrls];	CBasicApp *		parent;	FSSpec 			mDestination;				int		iNumBatchUrls;			int		iBatchSequenceNum;				bool	bInBatchUrlDialog;			bool	bBatchDownloadInProgress;			bool	bNextDownloadCanBegin;			bool	bOverwriteLocal;				void	PerformImport(FSSpec *);			void	PerformImport(Handle);			size_t	ReadLineFromStream(LStream *stream, Str255 outLine);			void	UpdateTableData(CBatchDownloadUrlTable *table);			void	BeginBatchDownload(StDialogHandler *);			void	ImportBatchFromURL();	public:			 		CBatchDownloadDialog();	virtual void	Show();			void	SetParent(CBasicApp *parent) { this->parent = parent; }			void	NextDownloadCanBegin() { bNextDownloadCanBegin = true; }						bool	IsBatchDownloading() { return bBatchDownloadInProgress; }			bool	IsOverwriteLocal() { return bOverwriteLocal; }				FSSpec *	GetDestination() { return &mDestination; }					void	SetCurrentDownloadStatus(DOWNLOAD_STATE);};#endif