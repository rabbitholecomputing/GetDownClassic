#ifndef CPREFERENCESDIALOG_H#define CPREFERENCESDIALOG_H#include <string.h>#include <LDialogBox.h>#include <LPreferencesFile.h>#include <UResourceMgr.h>#include "CVolumeHelper.h"#include "CUrlPresetTable.h"#include "Constants.h"#define kCurrentPrefsVersion 	2#define kUrlPresetsLimit		10const ResIDT	rPreferencesResID			= 128;// Panes in the Preferences Dialogconst ResIDT	pane_prefs_chk_MacBinary	= 1001;const ResIDT	pane_prefs_chk_BinHex		= 1002;const ResIDT	pane_prefs_btn_DownloadLoc	= 1003;const ResIDT	pane_prefs_btn_EditPreset	= 1004;const ResIDT	pane_prefs_edt_UserAgent	= 1005;const ResIDT	pane_prefs_tbl_UrlPreset	= 2000;// Commands in the Preferences Dialogconst ResIDT	cmd_SetDownloadFolder		= 2000;const ResIDT	cmd_EditPresetUrl			= 2001;/* Edit URL Presets dialog */const ResIDT	pane_urls_edt_Name			= 1000;const ResIDT	pane_urls_edt_URL			= 1001;/* Downloader preferences struct versions. */typedef struct {	UInt32	magic;	UInt16	version;	// Version 1	bool		decodeMacBinary;	bool		decodeBinHex;	FSSpec		downloadFolder;	URLPreset	urlPresets[kUrlPresetsLimit];} DownloaderPreferencesV1;typedef struct {	UInt32	magic;	UInt16	version;	// Version 1	bool		decodeMacBinary;	bool		decodeBinHex;	FSSpec		downloadFolder;	URLPreset	urlPresets[kUrlPresetsLimit];	// Version 2	Str255		userAgent;	} DownloaderPreferencesV2;#define DownloaderPreferences DownloaderPreferencesV2class CPreferencesDialog : public LCommander{	private:	static DownloaderPreferences *currentPrefs;		void ShowDownloadFolderSetter();	void ShowEditPresetUrlDialog(CUrlPresetTable *table);	void UpdateTableData(CUrlPresetTable *table);	public:	CPreferencesDialog();		void ShowPreferences();	void MakeDefaults(DownloaderPreferences *prefs);		bool LoadPreferences(DownloaderPreferences *prefs);	bool SavePreferences(DownloaderPreferences *prefs);		void UpgradePrefsToVersion2(Handle resource);		URLPreset *GetUrlPreset(UInt8 index);	StringPtr GetUserAgent() { return currentPrefs->userAgent; }	DownloaderPreferences *GetCurrentPreferences() { return currentPrefs; }};#endif